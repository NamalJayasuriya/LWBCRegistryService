// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.lightweightbc.grpc";
option java_outer_classname = "Peer1";
option objc_class_prefix = "HLW1";

package com.lightweightbc.grpc;

//// The greeting service definition.
service PeerService {

    // Sending a event
    rpc PingHandle (PingRequest) returns (PingReply) {
    }

    //sending a block
    rpc KeyHandle (InfoRequest) returns (PeerInfo) {
    }

    //Storing pubkeys on Storage service
    rpc KeyStore (PeerInfo) returns (InfoResponse) {
    }

}


//service RegistryService {
//    // Sending a event
//    rpc PingHandle (PingRequest) returns (PingReply) {
//    }
//
//    //sending a block
//    rpc KeyHandle (KeyRequest) returns (KeyReply) {
//    }
//}

// The request message to add this event for next block
message PingRequest {

    string sender = 1;
    string lastBlock = 2;
    string signature = 3;

}

// The response message for event request
message PingReply {

    string latblock = 1;
    string signature = 2;

}

// The request message to obtain peerinfo
message InfoRequest {

    string account = 1;

}

// The response message containing the status
message InfoResponse {
    string response = 1;
}

// peer info message
message PeerInfo {

    string id = 1;
    string pubKey = 2;
    string address = 3;
    bool miner = 4;
    string signature = 5;


}


